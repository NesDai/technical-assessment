import { Component, OnInit } from '@angular/core';
import { EmployeeService } from '../share/services/employee.service';
import { EmployeeData, EmployeeDisplay } from '../share/interfaces/employee';
import { ActivatedRoute, ParamMap, Router } from '@angular/router';
import { skip } from 'rxjs';
import { Location } from '@angular/common';

@Component({
  selector: 'app-employee-list',
  templateUrl: './employee-list.component.html',
  styleUrls: ['./employee-list.component.css']
})
export class EmployeeListComponent implements OnInit {

  constructor(private employeeService: EmployeeService, private router: Router, private location: Location, private route: ActivatedRoute) {

    const a = this.route.snapshot.queryParamMap;
    console.log(a.get('gender'))
  }

  public employees: EmployeeDisplay[] = [];
  public queryKeys: any = {firstname: "", gender: "", species: ""};
  public loading: boolean = true;
  public genders: string[] = ['Male', 'Female'];
  public species: string[] = ['Human', 'Martian', 'Robot', 'Mutant', 'Decapodian', 'Omnicronian', 'Amphibiosans'];
  public selectedName: string = ""

  ngOnInit() {

    this.validateAndProcessQuery();
  }

  private getData() {
    this.employeeService.getEmployees(this.convertQueryURL(false)).subscribe(data => {
      this.employees = [];
      console.log(data)
      this.assignData(data);
      this.loading = false;
      this.filterByName(); 
    });
  }

  private assignData(data: any) {
    let x: EmployeeDisplay;
    for (let i = 0; i < data.length; i++) {
      x = {
        id: data[i].id,
        name: this.getName(data[i]),
        pfp: data[i].images.main,
        gender: data[i].gender,
        species: data[i].species,
        occupation: data[i].occupation,
      }
      this.employees.push(x);
    }
  }

  private getName(data: any) {
    if (data.name.middle === "") {
      return data.name.first + " " + data.name.last;
    }
    return data.name.first + " " + data.name.middle + " " + data.name.last;
  }

  private validateAndProcessQuery() {
    let questionIndex = this.location.path().indexOf('?');
    questionIndex = questionIndex === -1 ? Infinity : questionIndex;
    const queries = (<any>Object).fromEntries(this.location.path().substr(questionIndex + 1).split('&').filter(str => str).map(el => el.split('=')));

    const keys = Object.keys(queries);
    for (let key of keys) {
      if (key !== 'gender' && key !== 'species' && key !== 'name') {
        this.router.navigate(['/employees'])
        break;
      }
      else {
        let temp = queries[key].charAt(0).toUpperCase() + queries[key].slice(1);
        if (key === 'gender') {
          this.queryKeys['gender'] = temp;
        }
        if (key === 'species') {
          this.queryKeys['species'] = temp;
        }
        if (key === 'name') {
          this.selectedName = temp;
          this.queryKeys['name'] = temp;
        }
      }
    }
    this.getData();
  }

  setQueryParam(param: string, value: string) {
    this.queryKeys[param] = value;
    this.router.navigateByUrl("employees/?" + this.convertQueryURL());
    this.getData();
  }

  convertQueryURL(withName = true) {
    let query = "";
    for (let key in this.queryKeys) {
        if (this.queryKeys[key] !== "" && (withName || key !== "name")) {
            query += `${key}=${this.queryKeys[key]}&`;
        }
    }
    console.log(query)
    return query.slice(0, -1);;
  }

  filterByName() {
    this.employees = this.employees.filter(item => item.name.toLowerCase().includes(this.queryKeys['name'].toLowerCase()));
  }

  resetQuery() {
    this.queryKeys['name'] = "";
    this.queryKeys['gender'] = "";
    this.queryKeys['species'] = "";
    this.getData();
    this.router.navigate(['/employees'])
  }
}
